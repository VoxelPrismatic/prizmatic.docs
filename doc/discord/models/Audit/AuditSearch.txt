{{cls}} instance = AuditSearch(events)

{{desc}} Represents an audit log search

{{noinit}}

{{param}} events [List[~.AuditEvent]]
    List of events

{{prop}} events [List[~.AuditEvent]]

{{bltin}} instance.__getitem__(key)
{{usage}} instance[key]

{{pydesc}} __getitemL__

{{param}} key [int, str, discord.models.Member.User]
    If `int`, then it will return that index in `instance.events` or it
    will filter by user ID if it is a user ID
    If `str`, then it will filter the events to that event type or by
    user ID if it is a user ID
    If `User`, then it will filter by that user

{{rtn}} [~.AuditSearch] The filtered events if `key`
is a User, user ID, or str

{{rtn}} [~.AuditEvent] The event if `key` is an index

{{bltin}} instance.__iter__()
{{usage}} iter(instance)

{{pydesc}} __iter__

{{rtn}} [generator]

{{bltin}} instance.__next__()
{{usage}} for event in instance: #code...

{{pydesc}} __next__

{{rtn}} [~.AuditEvent] The next event
