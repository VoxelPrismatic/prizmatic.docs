{{cls}} instance = PrizmList(*args)

{{desc}} A list, but with more useful stuff

{{note}} There are some differences when managing your lists when using this
class. Be sure to read the docs.

{{param}} *args [args]
    Your list, can be left blank

{{fn}} instance.__lshift__(item)

{{note}} This function is actually meant to be used as `instance << item`

{{desc}} Short for `instance.append(item)`

{{param}} item [Any]
    The item to append to the list

{{fn}} instance.__rshift__(item)

{{note}} This function is actually meant to be used as `instance >> item`

{{desc}} Short for `instance.remove(item)`

{{param}} item [Any]
    The item to remove from the list

{{fn}} instance.__invert__()

{{note}} This function is actually meant to be used as `~instance`

{{desc}} Reverses the list

{{fn}} instance.__isub__(data)

{{note}} This function is actually meant to be used as `instance -= data`

{{desc}} Removes all items in data from the list

{{param}} data [List[Any]]
    The list of things to remove

{{fn}} instance.__iadd__(data)

{{note}} This function is actually meant to be used as `instance += data`

{{desc}} Short for `instance.extend(data)`

{{param}} data [List[Any]]
    The list of things to add to the list

{{cls}} instance = PrizmDictList(**pairs)

{{desc}} Allows you to use a dict as a list, and vice versa
